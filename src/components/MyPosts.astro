---
import { CMessage } from "@/Constants/Classes";
import Alert from "@/Components/Alert/Alert.astro";
import { AlertType } from "@/Constants/Enumerations";
import { getSession } from "auth-astro/server";
import Post from "@/Components/Post.astro";

export enum PostType {
  USER,
  ALL,
}
interface Props {
  user_id: string;
  type: PostType;
}

const { user_id, type = PostType.ALL } = Astro.props;

let messages;

if (type === PostType.ALL) {
  const response = await fetch("http://localhost:4321/api/messages", {
    method: "GET",
  });
  const data = await response.json();
  messages = data.data;
} else {
  const response = await fetch("http://localhost:4321/api/messages", {
    method: "GET",
  });
  const data = await response.json();

  const parsed = data.data as Array<any>;
  if (parsed?.length === 0) {
    return (messages = []);
  } else {
    messages = parsed?.filter((message) => message.proprietary === user_id);
    messages = data.data;
  }
}

const session = await getSession(Astro.request);
if (!session) {
  return Astro.redirect("http://localhost:4321/");
}
---

<div id="post-grid-group" class="grid-group">
  {
    messages?.length > 0 ? (
      messages.map((message: CMessage, index: number) => (
        <Post
          id={message.id}
          title={message.title}
          subtitle={message.subtitle}
          timeStamp={message.created_at}
          html_content={message.html_content}
          proprietary_id={session.user?.id ?? ""}
          proprietary_name={message.proprietary_name}
          postIndex={index}
        />
      ))
    ) : (
      <Alert type={AlertType.WARNING} message="No hay posts" />
    )
  }
</div>
