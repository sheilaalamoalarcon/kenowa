---
import { useTranslations } from "@/i18n/utils";
import { v2 as cloudinary } from "cloudinary";

interface Props {
  user_id: string;
  lang: "en" | "es";
}
const { user_id, lang } = Astro.props;
let uploadedImage: any | undefined;
const t = useTranslations(lang);

cloudinary.config({
  cloud_name: import.meta.env.PUBLIC_CLOUDINARY_CLOUD_NAME,
  api_key: import.meta.env.PUBLIC_CLOUDINARY_API_KEY,
  api_secret: import.meta.env.CLOUDINARY_API_SECRET,
});

const uploadToCloud = async (buffer: Uint8Array, options: any) => {
  return new Promise((resolve, reject) => {
    cloudinary.uploader
      .upload_stream(options, (err, res) => {
        if (err) {
          return reject(err);
        }
        return resolve(res);
      })
      .end(buffer);
  });
};

if (Astro.request.method == "POST") {
  try {
    const data = await Astro.request.formData();

    const text = data.get("text");
    const image = data.get("myFile") as File;

    if (image.size > 0) {
      //transform File to Uint8array
      const arrayBuffer = await image.arrayBuffer();
      const int8arr = new Uint8Array(arrayBuffer);
      const res = await uploadToCloud(int8arr, {
        folder: "folder-name",
      });
      uploadedImage = res;

      const response = await fetch(
        `${import.meta.env.PUBLIC_URL}/api/messages/new`,
        {
          method: "POST",
          body: JSON.stringify({
            propietary: user_id,
            text: text,
            image: image,
          }),
          credentials: "include",
        }
      );
      if (response.ok) {
        window.location.href = "/globalChat";
      }
    }

    const response = await fetch(
      `${import.meta.env.PUBLIC_URL}/api/messages/new`,
      {
        method: "POST",
        body: JSON.stringify({
          propietary: user_id,
          text: text ?? "",
        }),
      }
    );

    if (response.ok) {
      window.location.href = "/globalChat";
    } else {
      return new Error("Error could not create post");
    }
  } catch (error) {
    return error;
  }
}
---

<form
  class={"flex flex-col justify-between gap-12 p-8 sm: w-fit"}
  id="form"
  enctype="multipart/form-data"
  method="post"
>
  <label class="flex flex-col w-full capitalize main-title text-start">
    {t("input.image")}
  </label>
  <input
    placeholder={t("input.image.placeholder")}
    title={t("input.image")}
    name="myFile"
    type="file"
    required={false}
    class="border-orange-500 text-black text-sm file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:text-orange-700 hover:file:bg-orange-100 invalid:border-red-500"
  />
  <label class="flex flex-col w-full capitalize main-title text-start">
    {t("input.content")}
  </label>
  <textarea
    placeholder={t("input.content.placeholder")}
    title={t("input.content")}
    name={"text"}
    maxlength={250}
    minlength={1}
    required
    class="border-orange-500 text-black text-sm invalid:border-red-500"
  ></textarea>

  <button
    type="submit"
    class="flex w-fit justify-center p-2 rounded bg-green-600 h5 shadow-lg mx-16 dark:bg-orange-500"
  >
    <p class={"text-white capitalize font-regular"}>
      {t("button.sendMessage")}
    </p>
  </button>
</form>
